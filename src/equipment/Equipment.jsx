import React, { useState, useEffect } from "react";
import { supabase } from "../lib/supabaseClient";
import "./Equipment.css";
import AddEq from "./AddEq";

const Equipment = () => {
  const [searchTerm, setSearchTerm] = useState("");
  const [showForm, setShowForm] = useState(false); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å showAddForm
  const [editingItem, setEditingItem] = useState(null); // state ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  const [equipmentList, setEquipmentList] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  /* ---------- ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Supabase ---------- */
  const fetchEquipment = async () => {
    setLoading(true);
    setError(null);
    try {
      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° schema ‡πÉ‡∏ô‡∏†‡∏≤‡∏û (idd, name, type, place, status)
      const { data, error } = await supabase
        .from("equipment")
        .select("idd, name, type, place, status") 
        .order("idd", { ascending: true });

      if (error) throw error;

      // ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö state ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
      const formatted = data.map((item) => ({
        id: item.idd,
        name: item.name,
        category: item.type, // type -> category
        location: item.place, // place -> location
        status: item.status,
      }));
      setEquipmentList(formatted);
    } catch (err) {
      setError("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ: " + err.message);
      console.error(err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchEquipment();
  }, []);

  /* ---------- ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ---------- */
  const filteredList = equipmentList.filter(
    (item) =>
      item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
      item.id.toLowerCase().includes(searchTerm.toLowerCase())
  );

  /* ----------  ‡πÉ‡∏´‡∏°‡πà: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏•‡∏ö ---------- */
  const handleDelete = async (idToDelete) => {
    // ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö
    if (!window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ?")) {
      return;
    }

    try {
      // ‡∏™‡∏±‡πà‡∏á‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏î‡∏¢‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'idd'
      const { error } = await supabase
        .from("equipment")
        .delete()
        .eq("idd", idToDelete);

      if (error) throw error;

      alert("‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      fetchEquipment(); // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    } catch (err) {
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö: " + err.message);
      console.error("Delete error:", err);
    }
  };

  /* ---------- ‡πÉ‡∏´‡∏°‡πà: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏¥‡∏ô‡∏™‡∏≠) ---------- */
  const handleEdit = (item) => {
    setEditingItem(item); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ item ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    setShowForm(true);     // ‡πÄ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°
  };

  /* ---------- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï: ‡∏´‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å (‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ---------- */
  const handleSaveSuccess = () => {
    const actionText = editingItem ? "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç" : "‡πÄ‡∏û‡∏¥‡πà‡∏°"; // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    fetchEquipment();
    setShowForm(false);
    setEditingItem(null); // ‡∏•‡πâ‡∏≤‡∏á item ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    alert(`${actionText}‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`);
  };

  /* ---------- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï: ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏° ---------- */
  const handleCancel = () => {
    setShowForm(false);
    setEditingItem(null); // ‡∏•‡πâ‡∏≤‡∏á item ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  };

  /* ---------- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï: ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ---------- */
  if (showForm) {
    return (
      <AddEq
        onCancel={handleCancel}
        onSave={handleSaveSuccess}
        initialData={editingItem} // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏ü‡∏≠‡∏£‡πå‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
      />
    );
  }

  /* ---------- UI ‡∏´‡∏•‡∏±‡∏Å (‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏∏‡πà‡∏°) ---------- */
  return (
    <div className="equipment-page">
      <div className="equipment-header">
        <h2>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</h2>
      </div>

      <div className="equipment-controls">
        <div className="search-box">
          <input
            type="text"
            placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
          />
          <button className="search-btn">Search</button>
        </div>

        {/* ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï onClick ‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏° */}
        <button
          className="add-btn"
          onClick={() => {
            setEditingItem(null); // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç (‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà)
            setShowForm(true);
          }}
        >
          + ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
        </button>
      </div>

      {/* Loading */}
      {loading && (
        <div style={{ textAlign: "center", padding: "2rem" }}>
          ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...
        </div>
      )}

      {/* Error */}
      {error && (
        <div style={{ color: "red", textAlign: "center", padding: "1rem" }}>
          {error}
        </div>
      )}

      {/* Table (‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏∏‡πà‡∏°) */}
      {!loading && !error && (
        <div className="equipment-table-container">
          <table className="equipment-table">
            <thead>
              <tr>
                <th>‡∏£‡∏´‡∏±‡∏™</th>
                <th>‡∏ä‡∏∑‡πà‡∏≠</th>
                <th>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</th>
                <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà</th>
                <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                <th>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
              </tr>
            </thead>
            <tbody>
              {filteredList.length === 0 ? (
                <tr>
                  <td
                    colSpan="6"
                    style={{ textAlign: "center", padding: "2rem" }}
                  >
                    {searchTerm ? "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤" : "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå"}
                  </td>
                </tr>
              ) : (
                filteredList.map((item) => (
                  <tr key={item.id}>
                    <td>{item.id}</td>
                    <td>{item.name}</td>
                    <td>{item.category}</td>
                    <td>{item.location}</td>
                    <td>
                      <span
                        className={`status-dot ${
                          item.status === "‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
                            ? "green"
                            : item.status === "‡∏ã‡πà‡∏≠‡∏°‡∏ö‡∏≥‡∏£‡∏∏‡∏á"
                            ? "yellow"
                            : "red"
                        }`}
                      ></span>{" "}
                      {item.status}
                    </td>
                    <td>
                      {/* ‡πÉ‡∏´‡∏°‡πà: ‡πÄ‡∏û‡∏¥‡πà‡∏° onClick ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç */}
                      <button
                        className="edit-btn"
                        onClick={() => handleEdit(item)}
                      >
                        ‚úèÔ∏è
                      </button>
                      
                      {/* ‡πÉ‡∏´‡∏°‡πà: ‡πÄ‡∏û‡∏¥‡πà‡∏° onClick ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö */}
                      <button
                        className="delete-btn"
                        onClick={() => handleDelete(item.id)}
                      >
                        üóëÔ∏è
                      </button>
                    </td>
                  </tr>
                ))
              )}
            </tbody>
          </table>
        </div>
      )}

      {/* ... (Pagination UI) ... */}
      
    </div>
  );
};

export default Equipment;