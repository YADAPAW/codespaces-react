import React, { useState } from "react";
import "./Equipment.css";
import AddEq from "./AddEq";  // ‡πÄ‡∏û‡∏¥‡πà‡∏° import component AddEq

const Equipment = () => {
  const [searchTerm, setSearchTerm] = useState("");
  const [showAddForm, setShowAddForm] = useState(false);  // State ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå

  // üîπ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á
  const equipmentList = [
    {
      id: "PC-001",
      name: "‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå Dell OptiPlex",
      category: "‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå",
      location: "‡∏ä‡∏±‡πâ‡∏ô 2 ‡∏´‡πâ‡∏≠‡∏á 201",
      status: "‡∏ã‡πà‡∏≠‡∏°‡∏ö‡∏≥‡∏£‡∏∏‡∏á",
    },
  ];

  // üîπ ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
  const filteredList = equipmentList.filter((item) =>
    item.name.toLowerCase().includes(searchTerm.toLowerCase())
  );

  // ‡∏ñ‡πâ‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏° ‡πÉ‡∏´‡πâ render AddEq ‡πÅ‡∏ó‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
  if (showAddForm) {
    return (
      <AddEq
        onCancel={() => setShowAddForm(false)}  // ‡∏™‡πà‡∏á prop ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        onSave={(newEquipment) => {
          // TODO: ‡πÄ‡∏û‡∏¥‡πà‡∏° logic ‡∏à‡∏£‡∏¥‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏´‡∏£‡∏∑‡∏≠ update state)
          console.log("‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏´‡∏°‡πà:", newEquipment);
          setShowAddForm(false);  // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
          alert("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
        }}
      />
    );
  }

  return (
    <div className="equipment-page">
      <div className="equipment-header">
        <h2>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</h2>
      </div>

      <div className="equipment-controls">
        <div className="search-box">
          <input
            type="text"
            placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤"
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
          />
          <button className="search-btn">üîç</button>
        </div>

        {/* ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ setState ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏° */}
        <button className="add-btn" onClick={() => setShowAddForm(true)}>
          + ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
        </button>
      </div>

      <div className="equipment-table-container">
        <table className="equipment-table">
          <thead>
            <tr>
              <th>‡∏£‡∏´‡∏±‡∏™</th>
              <th>‡∏ä‡∏∑‡πà‡∏≠</th>
              <th>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</th>
              <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà</th>
              <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
              <th>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
            </tr>
          </thead>
          <tbody>
            {filteredList.map((item, index) => (
              <tr key={index}>
                <td>{item.id}</td>
                <td>{item.name}</td>
                <td>{item.category}</td>
                <td>{item.location}</td>
                <td>
                  <span className="status-dot yellow"></span> {item.status}
                </td>
                <td>
                  <button className="edit-btn">‚úèÔ∏è</button>
                  <button className="delete-btn">üóëÔ∏è</button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <div className="pagination">
        <span>Prev</span>
        <div className="page-dots">
          <span className="dot active"></span>
          <span className="dot"></span>
          <span className="dot"></span>
        </div>
        <span>Next</span>
      </div>
    </div>
  );
};

export default Equipment;